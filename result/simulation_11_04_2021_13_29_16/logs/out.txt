parsing file C:\Users\angel\OneDrive\Desktop\motion-project-svn-r10-trunk\motion-project-svn-r10-trunk\MOTION\result\AODV.asm
file successfully parsed for asm AODV
<State 1 (controlled)>
Agent={host1,host2,host3,host4,host5}
Message={Message!1,Message!2,Message!3,Message!4,Message!5,Message!6,Message!7}
RoutingTable={RoutingTable!1}
active(RoutingTable!1)=true
ca_tot(host4,host2)=1
curSeqNum(host2)=1
curSeqNum(host4)=2
entry(RoutingTable!1)=(host2,1,1,host2)
entryFor(host1)=undef
isConsumed(host1,Message!1)=false
isConsumed(host1,Message!2)=false
isConsumed(host1,Message!3)=false
isConsumed(host1,Message!4)=true
isConsumed(host1,Message!5)=true
isConsumed(host2,Message!6)=false
isConsumed(host2,Message!7)=false
isConsumed(host3,Message!4)=false
isConsumed(host3,Message!5)=false
isConsumed(host3,Message!7)=false
isConsumed(host5,Message!4)=false
isConsumed(host5,Message!5)=false
isConsumed(host5,Message!6)=false
isLinked(host1,host2)=true
isLinked(host1,host3)=true
isLinked(host2,host1)=true
isLinked(host2,host3)=true
isLinked(host2,host4)=true
isLinked(host2,host5)=true
isLinked(host3,host1)=true
isLinked(host3,host2)=true
isLinked(host3,host5)=true
isLinked(host4,host2)=true
isLinked(host4,host5)=true
isLinked(host5,host2)=true
isLinked(host5,host3)=true
isLinked(host5,host4)=true
lastKnownDestSeqNum(host1,host3)=undef
lastKnownDestSeqNum(host2,host3)=undef
lastKnownDestSeqNum(host2,host5)=undef
lastKnownDestSeqNum(host4,host1)=undef
lastKnownDestSeqNum(host4,host2)=undef
lastKnownDestSeqNum(host4,host3)=undef
lastKnownDestSeqNum(host4,host5)=undef
localReqCount(host2)=1
localReqCount(host4)=2
messageRREQ(Message!1)=(host4,1,0,host5,undef,1,host4)
messageRREQ(Message!2)=(host4,1,0,host1,undef,1,host4)
messageRREQ(Message!3)=(host4,1,0,host3,undef,1,host4)
messageRREQ(Message!4)=(host2,1,0,host5,undef,1,host2)
messageRREQ(Message!5)=(host2,1,0,host3,undef,1,host2)
messageRREQ(Message!6)=(host4,2,0,host2,undef,2,host4)
messageRREQ(Message!7)=(host2,1,1,host3,undef,1,host1)
messageType(Message!1)=RREQ
messageType(Message!2)=RREQ
messageType(Message!3)=RREQ
messageType(Message!4)=RREQ
messageType(Message!5)=RREQ
messageType(Message!6)=RREQ
messageType(Message!7)=RREQ
owner(RoutingTable!1)=host1
precursor(RoutingTable!1)=[]
receivedReq(host1)=[(1,host2)]
receivedReq(host2)=[(1,host2)]
receivedReq(host4)=[(1,host4),(2,host4)]
rreq_update(host1)=2
rreq_update(host4)=2
rt_update(host1)=1
waitingForRouteTo(host2,host3)=true
waitingForRouteTo(host2,host5)=true
waitingForRouteTo(host4,host1)=true
waitingForRouteTo(host4,host2)=true
waitingForRouteTo(host4,host3)=true
waitingForRouteTo(host4,host5)=true
waitingForRouteToTmp(host2,host3)=4
waitingForRouteToTmp(host2,host5)=4
waitingForRouteToTmp(host4,host1)=4
waitingForRouteToTmp(host4,host2)=5
waitingForRouteToTmp(host4,host3)=4
waitingForRouteToTmp(host4,host5)=4
</State 1 (controlled)>
Final state:
Agent={host1,host2,host3,host4,host5}
Message={Message!1,Message!2,Message!3,Message!4,Message!5,Message!6,Message!7}
RoutingTable={RoutingTable!1}
active(RoutingTable!1)=true
ca_tot(host4,host2)=1
curSeqNum(host2)=1
curSeqNum(host4)=2
entry(RoutingTable!1)=(host2,1,1,host2)
entryFor(host1)=undef
isConsumed(host1,Message!1)=false
isConsumed(host1,Message!2)=false
isConsumed(host1,Message!3)=false
isConsumed(host1,Message!4)=true
isConsumed(host1,Message!5)=true
isConsumed(host2,Message!6)=false
isConsumed(host2,Message!7)=false
isConsumed(host3,Message!4)=false
isConsumed(host3,Message!5)=false
isConsumed(host3,Message!7)=false
isConsumed(host5,Message!4)=false
isConsumed(host5,Message!5)=false
isConsumed(host5,Message!6)=false
isLinked(host1,host2)=true
isLinked(host1,host3)=true
isLinked(host2,host1)=true
isLinked(host2,host3)=true
isLinked(host2,host4)=true
isLinked(host2,host5)=true
isLinked(host3,host1)=true
isLinked(host3,host2)=true
isLinked(host3,host5)=true
isLinked(host4,host2)=true
isLinked(host4,host5)=true
isLinked(host5,host2)=true
isLinked(host5,host3)=true
isLinked(host5,host4)=true
lastKnownDestSeqNum(host1,host3)=undef
lastKnownDestSeqNum(host2,host3)=undef
lastKnownDestSeqNum(host2,host5)=undef
lastKnownDestSeqNum(host4,host1)=undef
lastKnownDestSeqNum(host4,host2)=undef
lastKnownDestSeqNum(host4,host3)=undef
lastKnownDestSeqNum(host4,host5)=undef
localReqCount(host2)=1
localReqCount(host4)=2
messageRREQ(Message!1)=(host4,1,0,host5,undef,1,host4)
messageRREQ(Message!2)=(host4,1,0,host1,undef,1,host4)
messageRREQ(Message!3)=(host4,1,0,host3,undef,1,host4)
messageRREQ(Message!4)=(host2,1,0,host5,undef,1,host2)
messageRREQ(Message!5)=(host2,1,0,host3,undef,1,host2)
messageRREQ(Message!6)=(host4,2,0,host2,undef,2,host4)
messageRREQ(Message!7)=(host2,1,1,host3,undef,1,host1)
messageType(Message!1)=RREQ
messageType(Message!2)=RREQ
messageType(Message!3)=RREQ
messageType(Message!4)=RREQ
messageType(Message!5)=RREQ
messageType(Message!6)=RREQ
messageType(Message!7)=RREQ
owner(RoutingTable!1)=host1
precursor(RoutingTable!1)=[]
receivedReq(host1)=[(1,host2)]
receivedReq(host2)=[(1,host2)]
receivedReq(host4)=[(1,host4),(2,host4)]
rreq_update(host1)=2
rreq_update(host4)=2
rt_update(host1)=1
waitingForRouteTo(host2,host3)=true
waitingForRouteTo(host2,host5)=true
waitingForRouteTo(host4,host1)=true
waitingForRouteTo(host4,host2)=true
waitingForRouteTo(host4,host3)=true
waitingForRouteTo(host4,host5)=true
waitingForRouteToTmp(host2,host3)=4
waitingForRouteToTmp(host2,host5)=4
waitingForRouteToTmp(host4,host1)=4
waitingForRouteToTmp(host4,host2)=5
waitingForRouteToTmp(host4,host3)=4
waitingForRouteToTmp(host4,host5)=4
